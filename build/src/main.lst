GAS LISTING /tmp/cc1E6ibf.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 54687265 		.string	"ThreadA created\n"
   9      61644120 
   9      63726561 
   9      7465640A 
   9      00
  10 0011 00000000 		.align	3
  10      000000
  11              	.LC1:
  12 0018 54687265 		.string	"ThreadB created\n"
  12      61644220 
  12      63726561 
  12      7465640A 
  12      00
  13 0029 00000000 		.align	3
  13      000000
  14              	.LC2:
  15 0030 54687265 		.string	"ThreadC created\n"
  15      61644320 
  15      63726561 
  15      7465640A 
  15      00
  16 0041 00000000 		.align	3
  16      000000
  17              	.LC3:
  18 0048 54687265 		.string	"ThreadD created\n"
  18      61644420 
  18      63726561 
  18      7465640A 
  18      00
  19 0059 00000000 		.align	3
  19      000000
  20              	.LC4:
  21 0060 46696E69 		.string	"Finished\n"
  21      73686564 
  21      0A00
  22              		.text
  23              		.align	2
  24              		.globl	main
  26              	main:
  27              	.LFB40:
  28              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** //
   2:src/main.cpp  **** // Created by marko on 20.4.22..
   3:src/main.cpp  **** //
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "../h/tcb.hpp"
   6:src/main.cpp  **** #include "../h/workers.hpp"
   7:src/main.cpp  **** #include "../h/syscall_c.hpp"
   8:src/main.cpp  **** 
GAS LISTING /tmp/cc1E6ibf.s 			page 2


   9:src/main.cpp  **** int main()
  10:src/main.cpp  **** {
  29              		.loc 1 10 1
  30              		.cfi_startproc
  31 0000 130101FB 		addi	sp,sp,-80
  32              		.cfi_def_cfa_offset 80
  33 0004 23341104 		sd	ra,72(sp)
  34 0008 23308104 		sd	s0,64(sp)
  35 000c 233C9102 		sd	s1,56(sp)
  36              		.cfi_offset 1, -8
  37              		.cfi_offset 8, -16
  38              		.cfi_offset 9, -24
  39 0010 13040105 		addi	s0,sp,80
  40              		.cfi_def_cfa 8, 0
  11:src/main.cpp  ****     MemoryAllocator::init();
  41              		.loc 1 11 5
  42              		.loc 1 11 26 is_stmt 0
  43 0014 97000000 		call	_ZN15MemoryAllocator4initEv@plt
  43      E7800000 
  44              	.LVL0:
  12:src/main.cpp  ****     TCB *threads[5];
  45              		.loc 1 12 5 is_stmt 1
  13:src/main.cpp  **** 
  14:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
  46              		.loc 1 14 5
  47              		.loc 1 14 19 is_stmt 0
  48 001c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  48      83B70700 
  49              	.LVL1:
  50              	.LBB15:
  51              	.LBB16:
  52              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** #include "../lib/console.h"
  10:src/../h/riscv.hpp **** #include "print.hpp"
  11:src/../h/riscv.hpp **** #include "tcb.hpp"
  12:src/../h/riscv.hpp **** #include "MemoryAllocator.hpp"
  13:src/../h/riscv.hpp **** class Riscv
  14:src/../h/riscv.hpp **** {
  15:src/../h/riscv.hpp **** public:
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     //pop sstatus spp and sstatus spie
  18:src/../h/riscv.hpp ****     static void popSppSpie();
  19:src/../h/riscv.hpp ****     //push x3..31 registers
  20:src/../h/riscv.hpp ****     static void pushRegisters();
  21:src/../h/riscv.hpp ****     //pop x3..31 regiesters
  22:src/../h/riscv.hpp ****     static void popRegisters();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // read register scause
  25:src/../h/riscv.hpp ****     static uint64 r_scause();
GAS LISTING /tmp/cc1E6ibf.s 			page 3


  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // write register scause
  28:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // read register sepc
  31:src/../h/riscv.hpp ****     static uint64 r_sepc();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // write register sepc
  34:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // read register stvec
  37:src/../h/riscv.hpp ****     static uint64 r_stvec();
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // write register stvec
  40:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // read register stval
  43:src/../h/riscv.hpp ****     static uint64 r_stval();
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // write register stval
  46:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     enum BitMaskSip
  49:src/../h/riscv.hpp ****     {
  50:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  51:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  52:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  53:src/../h/riscv.hpp ****     };
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp ****     // mask set register sip
  56:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp ****     // mask clear register sip
  59:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     // read register sip
  62:src/../h/riscv.hpp ****     static uint64 r_sip();
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // write register sip
  65:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     enum BitMaskSstatus
  68:src/../h/riscv.hpp ****     {
  69:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  70:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  71:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  72:src/../h/riscv.hpp ****     };
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     // mask set register sstatus
  75:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     // mask clear register sstatus
  78:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // read register sstatus
  81:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  82:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc1E6ibf.s 			page 4


  83:src/../h/riscv.hpp ****     // write register sstatus
  84:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     //read a0 register
  87:src/../h/riscv.hpp ****     static uint64 r_a0();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     //write to a0 register
  90:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     static void supervisorTrap();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp **** private:
  95:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  96:src/../h/riscv.hpp **** };
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 100:src/../h/riscv.hpp **** {
 101:src/../h/riscv.hpp ****     uint64 volatile scause;
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 103:src/../h/riscv.hpp ****     return scause;
 104:src/../h/riscv.hpp **** }
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 107:src/../h/riscv.hpp **** {
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 109:src/../h/riscv.hpp **** }
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 112:src/../h/riscv.hpp **** {
 113:src/../h/riscv.hpp ****     uint64 volatile sepc;
 114:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 115:src/../h/riscv.hpp ****     return sepc;
 116:src/../h/riscv.hpp **** }
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 119:src/../h/riscv.hpp **** {
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 121:src/../h/riscv.hpp **** }
 122:src/../h/riscv.hpp **** 
 123:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 124:src/../h/riscv.hpp **** {
 125:src/../h/riscv.hpp ****     uint64 volatile stvec;
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 127:src/../h/riscv.hpp ****     return stvec;
 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 131:src/../h/riscv.hpp **** {
 132:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  53              		.loc 2 132 5 is_stmt 1
  54              		.loc 2 132 69 is_stmt 0
  55              	#APP
  56              	# 132 "src/../h/riscv.hpp" 1
 133              	}
  57              		csrw stvec, a5
  58              	# 0 "" 2
GAS LISTING /tmp/cc1E6ibf.s 			page 5


  59              	.LVL2:
  60              	#NO_APP
  61              	.LBE16:
  62              	.LBE15:
  15:src/main.cpp  **** 
  16:src/main.cpp  ****     int velicinaZaglavlja = 2 *sizeof(size_t); // meni je ovoliko
  63              		.loc 1 16 5 is_stmt 1
  17:src/main.cpp  **** 
  18:src/main.cpp  ****     const size_t maxMemorija = (((size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR - velicinaZaglavlj
  64              		.loc 1 18 5
  65              		.loc 1 18 56 is_stmt 0
  66 0028 97070000 		la	a5,HEAP_END_ADDR
  66      83B70700 
  67 0030 03B50700 		ld	a0,0(a5)
  68 0034 97070000 		la	a5,HEAP_START_ADDR
  68      83B70700 
  69 003c 83B70700 		ld	a5,0(a5)
  70 0040 3305F540 		sub	a0,a0,a5
  71              		.loc 1 18 82
  72 0044 130505FF 		addi	a0,a0,-16
  73              	.LVL3:
  19:src/main.cpp  ****     char* niz = (char*)mem_alloc(maxMemorija); // celokupan prostor
  74              		.loc 1 19 5 is_stmt 1
  75              		.loc 1 19 33 is_stmt 0
  76 0048 137505FC 		andi	a0,a0,-64
  77              	.LVL4:
  78 004c 97000000 		call	_Z9mem_allocm@plt
  78      E7800000 
  79              	.LVL5:
  80 0054 93040500 		mv	s1,a0
  81              	.LVL6:
  20:src/main.cpp  ****     if(niz == nullptr) {
  82              		.loc 1 20 5 is_stmt 1
  83 0058 63020510 		beqz	a0,.L12
  84              	.L2:
  21:src/main.cpp  ****         __putc('?');
  22:src/main.cpp  ****     }
  23:src/main.cpp  **** 
  24:src/main.cpp  ****     int n = 10;
  85              		.loc 1 24 5
  86              	.LVL7:
  25:src/main.cpp  ****     char* niz2 = (char*)mem_alloc(n*sizeof(char));
  87              		.loc 1 25 5
  88              		.loc 1 25 34 is_stmt 0
  89 005c 1305A000 		li	a0,10
  90 0060 97000000 		call	_Z9mem_allocm@plt
  90      E7800000 
  91              	.LVL8:
  26:src/main.cpp  ****     if(niz2 == nullptr) {
  92              		.loc 1 26 5 is_stmt 1
  93 0068 63020510 		beqz	a0,.L13
  94              	.LVL9:
  95              	.L3:
  27:src/main.cpp  ****         __putc('k');
  28:src/main.cpp  ****     }
  29:src/main.cpp  **** 
  30:src/main.cpp  ****     int status = MemoryAllocator::mem_free(niz);
GAS LISTING /tmp/cc1E6ibf.s 			page 6


  96              		.loc 1 30 5
  97              		.loc 1 30 43 is_stmt 0
  98 006c 13850400 		mv	a0,s1
  99 0070 97000000 		call	_ZN15MemoryAllocator8mem_freeEPKv@plt
  99      E7800000 
 100              	.LVL10:
  31:src/main.cpp  ****     if(status != 0) {
 101              		.loc 1 31 5 is_stmt 1
 102 0078 63120510 		bnez	a0,.L14
 103              	.LVL11:
 104              	.L4:
  32:src/main.cpp  ****         __putc('?');
  33:src/main.cpp  ****     }
  34:src/main.cpp  ****     niz2 = (char*)mem_alloc(n*sizeof(char));
 105              		.loc 1 34 5
 106              		.loc 1 34 28 is_stmt 0
 107 007c 1305A000 		li	a0,10
 108 0080 97000000 		call	_Z9mem_allocm@plt
 108      E7800000 
 109              	.LVL12:
  35:src/main.cpp  ****     if(niz2 == nullptr) {
 110              		.loc 1 35 5 is_stmt 1
 111 0088 63020510 		beqz	a0,.L15
 112              	.LVL13:
 113              	.L5:
  36:src/main.cpp  ****         __putc('?');
  37:src/main.cpp  ****     }
  38:src/main.cpp  **** 
  39:src/main.cpp  **** 
  40:src/main.cpp  **** 
  41:src/main.cpp  ****     //threads[0] = TCB::createThread(nullptr, nullptr);
  42:src/main.cpp  ****     thread_create(&threads[0],nullptr, nullptr);
 114              		.loc 1 42 5
 115              		.loc 1 42 18 is_stmt 0
 116 008c 13060000 		li	a2,0
 117 0090 93050000 		li	a1,0
 118 0094 130584FB 		addi	a0,s0,-72
 119 0098 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 119      E7800000 
 120              	.LVL14:
  43:src/main.cpp  ****     TCB::running = threads[0];
 121              		.loc 1 43 5 is_stmt 1
 122              		.loc 1 43 18 is_stmt 0
 123 00a0 033784FB 		ld	a4,-72(s0)
 124 00a4 97070000 		la	a5,_ZN3TCB7runningE
 124      83B70700 
 125 00ac 23B0E700 		sd	a4,0(a5)
  44:src/main.cpp  **** 
  45:src/main.cpp  ****     //threads[1] = TCB::createThread(workerBodyA, nullptr);
  46:src/main.cpp  ****     thread_create(&threads[1],workerBodyA, nullptr);
 126              		.loc 1 46 5 is_stmt 1
 127              		.loc 1 46 18 is_stmt 0
 128 00b0 13060000 		li	a2,0
 129 00b4 97050000 		la	a1,_Z11workerBodyAPv
 129      83B50500 
 130 00bc 130504FC 		addi	a0,s0,-64
 131 00c0 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
GAS LISTING /tmp/cc1E6ibf.s 			page 7


 131      E7800000 
 132              	.LVL15:
  47:src/main.cpp  ****     printString("ThreadA created\n");
 133              		.loc 1 47 5 is_stmt 1
 134              		.loc 1 47 16 is_stmt 0
 135 00c8 17050000 		lla	a0,.LC0
 135      13050500 
 136 00d0 97000000 		call	_Z11printStringPKc@plt
 136      E7800000 
 137              	.LVL16:
  48:src/main.cpp  ****     //threads[2] = TCB::createThread(workerBodyB , nullptr);
  49:src/main.cpp  ****     thread_create(&threads[2],workerBodyB, nullptr);
 138              		.loc 1 49 5 is_stmt 1
 139              		.loc 1 49 18 is_stmt 0
 140 00d8 13060000 		li	a2,0
 141 00dc 97050000 		la	a1,_Z11workerBodyBPv
 141      83B50500 
 142 00e4 130584FC 		addi	a0,s0,-56
 143 00e8 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 143      E7800000 
 144              	.LVL17:
  50:src/main.cpp  ****     printString("ThreadB created\n");
 145              		.loc 1 50 5 is_stmt 1
 146              		.loc 1 50 16 is_stmt 0
 147 00f0 17050000 		lla	a0,.LC1
 147      13050500 
 148 00f8 97000000 		call	_Z11printStringPKc@plt
 148      E7800000 
 149              	.LVL18:
  51:src/main.cpp  ****     //threads[3] = TCB::createThread(workerBodyC, nullptr);
  52:src/main.cpp  ****     thread_create(&threads[3],workerBodyC, nullptr);
 150              		.loc 1 52 5 is_stmt 1
 151              		.loc 1 52 18 is_stmt 0
 152 0100 13060000 		li	a2,0
 153 0104 97050000 		la	a1,_Z11workerBodyCPv
 153      83B50500 
 154 010c 130504FD 		addi	a0,s0,-48
 155 0110 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 155      E7800000 
 156              	.LVL19:
  53:src/main.cpp  ****     printString("ThreadC created\n");
 157              		.loc 1 53 5 is_stmt 1
 158              		.loc 1 53 16 is_stmt 0
 159 0118 17050000 		lla	a0,.LC2
 159      13050500 
 160 0120 97000000 		call	_Z11printStringPKc@plt
 160      E7800000 
 161              	.LVL20:
  54:src/main.cpp  ****     //threads[4] = TCB::createThread(workerBodyD, nullptr);
  55:src/main.cpp  ****     thread_create(&threads[4],workerBodyD, nullptr);
 162              		.loc 1 55 5 is_stmt 1
 163              		.loc 1 55 18 is_stmt 0
 164 0128 13060000 		li	a2,0
 165 012c 97050000 		la	a1,_Z11workerBodyDPv
 165      83B50500 
 166 0134 130584FD 		addi	a0,s0,-40
 167 0138 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
GAS LISTING /tmp/cc1E6ibf.s 			page 8


 167      E7800000 
 168              	.LVL21:
  56:src/main.cpp  ****     printString("ThreadD created\n");
 169              		.loc 1 56 5 is_stmt 1
 170              		.loc 1 56 16 is_stmt 0
 171 0140 17050000 		lla	a0,.LC3
 171      13050500 
 172 0148 97000000 		call	_Z11printStringPKc@plt
 172      E7800000 
 173              	.LVL22:
  57:src/main.cpp  **** 
  58:src/main.cpp  **** 
  59:src/main.cpp  **** 
  60:src/main.cpp  ****    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 174              		.loc 1 60 4 is_stmt 1
 175              	.LBB17:
 176              	.LBB18:
 134:src/../h/riscv.hpp **** 
 135:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 136:src/../h/riscv.hpp **** {
 137:src/../h/riscv.hpp ****     uint64 volatile stval;
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 139:src/../h/riscv.hpp ****     return stval;
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 158:src/../h/riscv.hpp **** {
 159:src/../h/riscv.hpp ****     uint64 volatile sip;
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 161:src/../h/riscv.hpp ****     return sip;
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 177              		.loc 2 171 5
 178              		.loc 2 171 68 is_stmt 0
GAS LISTING /tmp/cc1E6ibf.s 			page 9


 179 0150 93072000 		li	a5,2
 180              	#APP
 181              	# 171 "src/../h/riscv.hpp" 1
 172              	}
 182              		csrs sstatus, a5
 183              	# 0 "" 2
 184              		.loc 2 172 1
 185              	#NO_APP
 186 0158 6F00C004 		j	.L8
 187              	.LVL23:
 188              	.L12:
 189              	.LBE18:
 190              	.LBE17:
  21:src/main.cpp  ****     }
 191              		.loc 1 21 9 is_stmt 1
  21:src/main.cpp  ****     }
 192              		.loc 1 21 15 is_stmt 0
 193 015c 1305F003 		li	a0,63
 194 0160 97000000 		call	__putc@plt
 194      E7800000 
 195              	.LVL24:
 196 0168 6FF05FEF 		j	.L2
 197              	.LVL25:
 198              	.L13:
  27:src/main.cpp  ****     }
 199              		.loc 1 27 9 is_stmt 1
  27:src/main.cpp  ****     }
 200              		.loc 1 27 15 is_stmt 0
 201 016c 1305B006 		li	a0,107
 202              	.LVL26:
 203 0170 97000000 		call	__putc@plt
 203      E7800000 
 204              	.LVL27:
 205 0178 6FF05FEF 		j	.L3
 206              	.LVL28:
 207              	.L14:
  32:src/main.cpp  ****     }
 208              		.loc 1 32 9 is_stmt 1
  32:src/main.cpp  ****     }
 209              		.loc 1 32 15 is_stmt 0
 210 017c 1305F003 		li	a0,63
 211              	.LVL29:
 212 0180 97000000 		call	__putc@plt
 212      E7800000 
 213              	.LVL30:
 214 0188 6FF05FEF 		j	.L4
 215              	.LVL31:
 216              	.L15:
  36:src/main.cpp  ****     }
 217              		.loc 1 36 9 is_stmt 1
  36:src/main.cpp  ****     }
 218              		.loc 1 36 15 is_stmt 0
 219 018c 1305F003 		li	a0,63
 220              	.LVL32:
 221 0190 97000000 		call	__putc@plt
 221      E7800000 
 222              	.LVL33:
GAS LISTING /tmp/cc1E6ibf.s 			page 10


 223 0198 6FF05FEF 		j	.L5
 224              	.L6:
  61:src/main.cpp  ****     while (!(threads[1]->isFinished() &&
  62:src/main.cpp  ****              threads[2]->isFinished() &&
  63:src/main.cpp  ****              threads[3]->isFinished() &&
  64:src/main.cpp  ****              threads[4]->isFinished()))
  65:src/main.cpp  ****     {
  66:src/main.cpp  ****         thread_dispatch();
 225              		.loc 1 66 9 is_stmt 1 discriminator 3
 226              		.loc 1 66 24 is_stmt 0 discriminator 3
 227 019c 97000000 		call	_Z15thread_dispatchv@plt
 227      E7800000 
 228              	.LVL34:
 229              	.L8:
  61:src/main.cpp  ****     while (!(threads[1]->isFinished() &&
 230              		.loc 1 61 5 is_stmt 1
  61:src/main.cpp  ****     while (!(threads[1]->isFinished() &&
 231              		.loc 1 61 12
  61:src/main.cpp  ****     while (!(threads[1]->isFinished() &&
 232              		.loc 1 61 23 is_stmt 0
 233 01a4 833704FC 		ld	a5,-64(s0)
 234              	.LVL35:
 235              	.LBB19:
 236              	.LBB20:
 237              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 5/19/24.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef PROJEKAT_TCB_HPP
   6:src/../h/tcb.hpp **** #define PROJEKAT_TCB_HPP
   7:src/../h/tcb.hpp **** #include "../lib/hw.h"
   8:src/../h/tcb.hpp **** #include "scheduler.hpp"
   9:src/../h/tcb.hpp **** #include "riscv.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** class TCB {
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp ****     void *operator new(size_t n);
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp ****     void *operator new[](size_t n);
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     void operator delete(void *p) noexcept;
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     void operator delete[](void *p) noexcept;
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp **** public:
  22:src/../h/tcb.hpp ****     ~TCB(){TCB::operator delete[](stack);}
  23:src/../h/tcb.hpp ****     bool isFinished() const {return finished;}
 238              		.loc 3 23 30 is_stmt 1
 239              		.loc 3 23 37 is_stmt 0
 240 01a8 83C70703 		lbu	a5,48(a5)
 241              	.LVL36:
 242              	.LBE20:
 243              	.LBE19:
  61:src/main.cpp  ****     while (!(threads[1]->isFinished() &&
 244              		.loc 1 61 12
 245 01ac E38807FE 		beqz	a5,.L6
GAS LISTING /tmp/cc1E6ibf.s 			page 11


  62:src/main.cpp  ****              threads[3]->isFinished() &&
 246              		.loc 1 62 23 discriminator 2
 247 01b0 833784FC 		ld	a5,-56(s0)
 248              	.LVL37:
 249              	.LBB21:
 250              	.LBB22:
 251              		.loc 3 23 30 is_stmt 1 discriminator 2
 252              		.loc 3 23 37 is_stmt 0 discriminator 2
 253 01b4 83C70703 		lbu	a5,48(a5)
 254              	.LVL38:
 255              	.LBE22:
 256              	.LBE21:
  61:src/main.cpp  ****     while (!(threads[1]->isFinished() &&
 257              		.loc 1 61 39 discriminator 2
 258 01b8 E38207FE 		beqz	a5,.L6
  63:src/main.cpp  ****              threads[4]->isFinished()))
 259              		.loc 1 63 23
 260 01bc 833704FD 		ld	a5,-48(s0)
 261              	.LVL39:
 262              	.LBB23:
 263              	.LBB24:
 264              		.loc 3 23 30 is_stmt 1
 265              		.loc 3 23 37 is_stmt 0
 266 01c0 83C70703 		lbu	a5,48(a5)
 267              	.LVL40:
 268              	.LBE24:
 269              	.LBE23:
  62:src/main.cpp  ****              threads[3]->isFinished() &&
 270              		.loc 1 62 39
 271 01c4 E38C07FC 		beqz	a5,.L6
  64:src/main.cpp  ****     {
 272              		.loc 1 64 23 discriminator 4
 273 01c8 833784FD 		ld	a5,-40(s0)
 274              	.LVL41:
 275              	.LBB25:
 276              	.LBB26:
 277              		.loc 3 23 30 is_stmt 1 discriminator 4
 278              		.loc 3 23 37 is_stmt 0 discriminator 4
 279 01cc 83C70703 		lbu	a5,48(a5)
 280              	.LVL42:
 281              	.LBE26:
 282              	.LBE25:
  61:src/main.cpp  ****              threads[2]->isFinished() &&
 283              		.loc 1 61 12 discriminator 4
 284 01d0 E38607FC 		beqz	a5,.L6
 285 01d4 930484FB 		addi	s1,s0,-72
 286              	.LVL43:
 287              	.L7:
 288              	.LBB27:
  67:src/main.cpp  ****     }
  68:src/main.cpp  **** 
  69:src/main.cpp  ****     for (auto &thread: threads)
 289              		.loc 1 69 24 is_stmt 1 discriminator 1
 290 01d8 930704FE 		addi	a5,s0,-32
 291 01dc 638CF400 		beq	s1,a5,.L9
 292              	.LVL44:
  70:src/main.cpp  ****     {
GAS LISTING /tmp/cc1E6ibf.s 			page 12


  71:src/main.cpp  ****         TCB::deleteThread(thread);
 293              		.loc 1 71 9 discriminator 2
 294              		.loc 1 71 26 is_stmt 0 discriminator 2
 295 01e0 03B50400 		ld	a0,0(s1)
 296 01e4 97000000 		call	_ZN3TCB12deleteThreadEPS_@plt
 296      E7800000 
 297              	.LVL45:
  69:src/main.cpp  ****     {
 298              		.loc 1 69 5 is_stmt 1 discriminator 2
 299 01ec 93848400 		addi	s1,s1,8
 300              	.LVL46:
 301 01f0 6FF09FFE 		j	.L7
 302              	.LVL47:
 303              	.L9:
 304              	.LBE27:
  72:src/main.cpp  ****     }
  73:src/main.cpp  ****     printString("Finished\n");
 305              		.loc 1 73 5
 306              		.loc 1 73 16 is_stmt 0
 307 01f4 17050000 		lla	a0,.LC4
 307      13050500 
 308 01fc 97000000 		call	_Z11printStringPKc@plt
 308      E7800000 
 309              	.LVL48:
  74:src/main.cpp  **** 
  75:src/main.cpp  ****     return 0;
 310              		.loc 1 75 5 is_stmt 1
  76:src/main.cpp  **** }
 311              		.loc 1 76 1 is_stmt 0
 312 0204 13050000 		li	a0,0
 313 0208 83308104 		ld	ra,72(sp)
 314              		.cfi_restore 1
 315 020c 03340104 		ld	s0,64(sp)
 316              		.cfi_restore 8
 317              		.cfi_def_cfa 2, 80
 318 0210 83348103 		ld	s1,56(sp)
 319              		.cfi_restore 9
 320              	.LVL49:
 321 0214 13010105 		addi	sp,sp,80
 322              		.cfi_def_cfa_offset 0
 323 0218 67800000 		jr	ra
 324              		.cfi_endproc
 325              	.LFE40:
 327              	.Letext0:
 328              		.file 4 "src/../h/../lib/hw.h"
 329              		.file 5 "src/../h/MemoryAllocator.hpp"
 330              		.file 6 "src/../h/syscall_c.hpp"
 331              		.file 7 "src/../h/print.hpp"
 332              		.file 8 "src/../h/../lib/console.h"
GAS LISTING /tmp/cc1E6ibf.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc1E6ibf.s:26     .text:0000000000000000 main
     /tmp/cc1E6ibf.s:30     .text:0000000000000000 .L0 
     /tmp/cc1E6ibf.s:31     .text:0000000000000000 .L0 
     /tmp/cc1E6ibf.s:32     .text:0000000000000004 .L0 
     /tmp/cc1E6ibf.s:36     .text:0000000000000010 .L0 
     /tmp/cc1E6ibf.s:37     .text:0000000000000010 .L0 
     /tmp/cc1E6ibf.s:38     .text:0000000000000010 .L0 
     /tmp/cc1E6ibf.s:40     .text:0000000000000014 .L0 
     /tmp/cc1E6ibf.s:42     .text:0000000000000014 .L0 
     /tmp/cc1E6ibf.s:43     .text:0000000000000014 .L0 
     /tmp/cc1E6ibf.s:46     .text:000000000000001c .L0 
     /tmp/cc1E6ibf.s:47     .text:000000000000001c .L0 
     /tmp/cc1E6ibf.s:48     .text:000000000000001c .L0 
     /tmp/cc1E6ibf.s:54     .text:0000000000000024 .L0 
  src/../h/riscv.hpp:132    .text:0000000000000024 .L0 
     /tmp/cc1E6ibf.s:64     .text:0000000000000028 .L0 
     /tmp/cc1E6ibf.s:65     .text:0000000000000028 .L0 
     /tmp/cc1E6ibf.s:66     .text:0000000000000028 .L0 
     /tmp/cc1E6ibf.s:72     .text:0000000000000044 .L0 
     /tmp/cc1E6ibf.s:75     .text:0000000000000048 .L0 
     /tmp/cc1E6ibf.s:76     .text:0000000000000048 .L0 
     /tmp/cc1E6ibf.s:83     .text:0000000000000058 .L0 
     /tmp/cc1E6ibf.s:87     .text:000000000000005c .L0 
     /tmp/cc1E6ibf.s:88     .text:000000000000005c .L0 
     /tmp/cc1E6ibf.s:89     .text:000000000000005c .L0 
     /tmp/cc1E6ibf.s:93     .text:0000000000000068 .L0 
     /tmp/cc1E6ibf.s:97     .text:000000000000006c .L0 
     /tmp/cc1E6ibf.s:98     .text:000000000000006c .L0 
     /tmp/cc1E6ibf.s:102    .text:0000000000000078 .L0 
     /tmp/cc1E6ibf.s:106    .text:000000000000007c .L0 
     /tmp/cc1E6ibf.s:107    .text:000000000000007c .L0 
     /tmp/cc1E6ibf.s:111    .text:0000000000000088 .L0 
     /tmp/cc1E6ibf.s:115    .text:000000000000008c .L0 
     /tmp/cc1E6ibf.s:116    .text:000000000000008c .L0 
     /tmp/cc1E6ibf.s:122    .text:00000000000000a0 .L0 
     /tmp/cc1E6ibf.s:123    .text:00000000000000a0 .L0 
     /tmp/cc1E6ibf.s:127    .text:00000000000000b0 .L0 
     /tmp/cc1E6ibf.s:128    .text:00000000000000b0 .L0 
     /tmp/cc1E6ibf.s:134    .text:00000000000000c8 .L0 
     /tmp/cc1E6ibf.s:135    .text:00000000000000c8 .L0 
     /tmp/cc1E6ibf.s:139    .text:00000000000000d8 .L0 
     /tmp/cc1E6ibf.s:140    .text:00000000000000d8 .L0 
     /tmp/cc1E6ibf.s:146    .text:00000000000000f0 .L0 
     /tmp/cc1E6ibf.s:147    .text:00000000000000f0 .L0 
     /tmp/cc1E6ibf.s:151    .text:0000000000000100 .L0 
     /tmp/cc1E6ibf.s:152    .text:0000000000000100 .L0 
     /tmp/cc1E6ibf.s:158    .text:0000000000000118 .L0 
     /tmp/cc1E6ibf.s:159    .text:0000000000000118 .L0 
     /tmp/cc1E6ibf.s:163    .text:0000000000000128 .L0 
     /tmp/cc1E6ibf.s:164    .text:0000000000000128 .L0 
     /tmp/cc1E6ibf.s:170    .text:0000000000000140 .L0 
     /tmp/cc1E6ibf.s:171    .text:0000000000000140 .L0 
     /tmp/cc1E6ibf.s:177    .text:0000000000000150 .L0 
     /tmp/cc1E6ibf.s:178    .text:0000000000000150 .L0 
     /tmp/cc1E6ibf.s:179    .text:0000000000000150 .L0 
GAS LISTING /tmp/cc1E6ibf.s 			page 14


     /tmp/cc1E6ibf.s:186    .text:0000000000000158 .L0 
     /tmp/cc1E6ibf.s:192    .text:000000000000015c .L0 
     /tmp/cc1E6ibf.s:193    .text:000000000000015c .L0 
     /tmp/cc1E6ibf.s:200    .text:000000000000016c .L0 
     /tmp/cc1E6ibf.s:201    .text:000000000000016c .L0 
     /tmp/cc1E6ibf.s:209    .text:000000000000017c .L0 
     /tmp/cc1E6ibf.s:210    .text:000000000000017c .L0 
     /tmp/cc1E6ibf.s:218    .text:000000000000018c .L0 
     /tmp/cc1E6ibf.s:219    .text:000000000000018c .L0 
     /tmp/cc1E6ibf.s:226    .text:000000000000019c .L0 
     /tmp/cc1E6ibf.s:227    .text:000000000000019c .L0 
     /tmp/cc1E6ibf.s:231    .text:00000000000001a4 .L0 
     /tmp/cc1E6ibf.s:232    .text:00000000000001a4 .L0 
     /tmp/cc1E6ibf.s:233    .text:00000000000001a4 .L0 
     /tmp/cc1E6ibf.s:239    .text:00000000000001a8 .L0 
     /tmp/cc1E6ibf.s:240    .text:00000000000001a8 .L0 
     /tmp/cc1E6ibf.s:245    .text:00000000000001ac .L0 
     /tmp/cc1E6ibf.s:247    .text:00000000000001b0 .L0 
     /tmp/cc1E6ibf.s:252    .text:00000000000001b4 .L0 
     /tmp/cc1E6ibf.s:253    .text:00000000000001b4 .L0 
     /tmp/cc1E6ibf.s:258    .text:00000000000001b8 .L0 
     /tmp/cc1E6ibf.s:260    .text:00000000000001bc .L0 
     /tmp/cc1E6ibf.s:265    .text:00000000000001c0 .L0 
     /tmp/cc1E6ibf.s:266    .text:00000000000001c0 .L0 
     /tmp/cc1E6ibf.s:271    .text:00000000000001c4 .L0 
     /tmp/cc1E6ibf.s:273    .text:00000000000001c8 .L0 
     /tmp/cc1E6ibf.s:278    .text:00000000000001cc .L0 
     /tmp/cc1E6ibf.s:279    .text:00000000000001cc .L0 
     /tmp/cc1E6ibf.s:284    .text:00000000000001d0 .L0 
     /tmp/cc1E6ibf.s:290    .text:00000000000001d8 .L0 
     /tmp/cc1E6ibf.s:294    .text:00000000000001e0 .L0 
     /tmp/cc1E6ibf.s:295    .text:00000000000001e0 .L0 
     /tmp/cc1E6ibf.s:299    .text:00000000000001ec .L0 
     /tmp/cc1E6ibf.s:306    .text:00000000000001f4 .L0 
     /tmp/cc1E6ibf.s:307    .text:00000000000001f4 .L0 
     /tmp/cc1E6ibf.s:311    .text:0000000000000204 .L0 
     /tmp/cc1E6ibf.s:312    .text:0000000000000204 .L0 
     /tmp/cc1E6ibf.s:314    .text:000000000000020c .L0 
     /tmp/cc1E6ibf.s:316    .text:0000000000000210 .L0 
     /tmp/cc1E6ibf.s:317    .text:0000000000000210 .L0 
     /tmp/cc1E6ibf.s:319    .text:0000000000000214 .L0 
     /tmp/cc1E6ibf.s:322    .text:0000000000000218 .L0 
     /tmp/cc1E6ibf.s:324    .text:000000000000021c .L0 
     /tmp/cc1E6ibf.s:333    .text:000000000000021c .L0 
     /tmp/cc1E6ibf.s:48     .text:000000000000001c .L0 
     /tmp/cc1E6ibf.s:66     .text:0000000000000028 .L0 
     /tmp/cc1E6ibf.s:68     .text:0000000000000034 .L0 
     /tmp/cc1E6ibf.s:124    .text:00000000000000a4 .L0 
     /tmp/cc1E6ibf.s:129    .text:00000000000000b4 .L0 
     /tmp/cc1E6ibf.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc1E6ibf.s:135    .text:00000000000000c8 .L0 
     /tmp/cc1E6ibf.s:141    .text:00000000000000dc .L0 
     /tmp/cc1E6ibf.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/cc1E6ibf.s:147    .text:00000000000000f0 .L0 
     /tmp/cc1E6ibf.s:153    .text:0000000000000104 .L0 
     /tmp/cc1E6ibf.s:14     .rodata.str1.8:0000000000000030 .LC2
     /tmp/cc1E6ibf.s:159    .text:0000000000000118 .L0 
GAS LISTING /tmp/cc1E6ibf.s 			page 15


     /tmp/cc1E6ibf.s:165    .text:000000000000012c .L0 
     /tmp/cc1E6ibf.s:17     .rodata.str1.8:0000000000000048 .LC3
     /tmp/cc1E6ibf.s:171    .text:0000000000000140 .L0 
     /tmp/cc1E6ibf.s:20     .rodata.str1.8:0000000000000060 .LC4
     /tmp/cc1E6ibf.s:307    .text:00000000000001f4 .L0 
     /tmp/cc1E6ibf.s:188    .text:000000000000015c .L12
     /tmp/cc1E6ibf.s:198    .text:000000000000016c .L13
     /tmp/cc1E6ibf.s:207    .text:000000000000017c .L14
     /tmp/cc1E6ibf.s:216    .text:000000000000018c .L15
     /tmp/cc1E6ibf.s:229    .text:00000000000001a4 .L8
     /tmp/cc1E6ibf.s:84     .text:000000000000005c .L2
     /tmp/cc1E6ibf.s:95     .text:000000000000006c .L3
     /tmp/cc1E6ibf.s:104    .text:000000000000007c .L4
     /tmp/cc1E6ibf.s:113    .text:000000000000008c .L5
     /tmp/cc1E6ibf.s:224    .text:000000000000019c .L6
     /tmp/cc1E6ibf.s:303    .text:00000000000001f4 .L9
     /tmp/cc1E6ibf.s:287    .text:00000000000001d8 .L7
     /tmp/cc1E6ibf.s:1576   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc1E6ibf.s:2640   .debug_str:00000000000000b2 .LASF140
     /tmp/cc1E6ibf.s:2746   .debug_str:00000000000004b0 .LASF141
     /tmp/cc1E6ibf.s:2764   .debug_str:0000000000000536 .LASF142
     /tmp/cc1E6ibf.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc1E6ibf.s:327    .text:000000000000021c .Letext0
     /tmp/cc1E6ibf.s:2612   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc1E6ibf.s:2782   .debug_str:00000000000005ad .LASF0
     /tmp/cc1E6ibf.s:2796   .debug_str:00000000000005e9 .LASF1
     /tmp/cc1E6ibf.s:2760   .debug_str:0000000000000518 .LASF2
     /tmp/cc1E6ibf.s:2732   .debug_str:0000000000000463 .LASF4
     /tmp/cc1E6ibf.s:2846   .debug_str:000000000000073c .LASF3
     /tmp/cc1E6ibf.s:2642   .debug_str:0000000000000176 .LASF5
     /tmp/cc1E6ibf.s:2802   .debug_str:000000000000060f .LASF6
     /tmp/cc1E6ibf.s:2780   .debug_str:000000000000059a .LASF7
     /tmp/cc1E6ibf.s:2884   .debug_str:0000000000000894 .LASF8
     /tmp/cc1E6ibf.s:2716   .debug_str:00000000000003d1 .LASF9
     /tmp/cc1E6ibf.s:2818   .debug_str:0000000000000684 .LASF10
     /tmp/cc1E6ibf.s:2874   .debug_str:0000000000000839 .LASF11
     /tmp/cc1E6ibf.s:2646   .debug_str:0000000000000189 .LASF12
     /tmp/cc1E6ibf.s:2618   .debug_str:0000000000000029 .LASF13
     /tmp/cc1E6ibf.s:2656   .debug_str:00000000000001d8 .LASF14
     /tmp/cc1E6ibf.s:2838   .debug_str:0000000000000700 .LASF15
     /tmp/cc1E6ibf.s:2668   .debug_str:0000000000000230 .LASF16
     /tmp/cc1E6ibf.s:2762   .debug_str:0000000000000526 .LASF26
     /tmp/cc1E6ibf.s:2700   .debug_str:000000000000035d .LASF27
     /tmp/cc1E6ibf.s:2876   .debug_str:0000000000000848 .LASF17
     /tmp/cc1E6ibf.s:2862   .debug_str:00000000000007db .LASF18
     /tmp/cc1E6ibf.s:2812   .debug_str:0000000000000641 .LASF19
     /tmp/cc1E6ibf.s:2850   .debug_str:000000000000075f .LASF29
     /tmp/cc1E6ibf.s:2878   .debug_str:000000000000084d .LASF31
     /tmp/cc1E6ibf.s:2736   .debug_str:000000000000047d .LASF20
     /tmp/cc1E6ibf.s:2614   .debug_str:0000000000000000 .LASF51
     /tmp/cc1E6ibf.s:2678   .debug_str:000000000000029e .LASF53
     /tmp/cc1E6ibf.s:2888   .debug_str:00000000000008ab .LASF21
     /tmp/cc1E6ibf.s:2860   .debug_str:00000000000007ba .LASF23
     /tmp/cc1E6ibf.s:2822   .debug_str:000000000000069e .LASF22
     /tmp/cc1E6ibf.s:2906   .debug_str:000000000000092a .LASF24
     /tmp/cc1E6ibf.s:2808   .debug_str:0000000000000634 .LASF55
     /tmp/cc1E6ibf.s:2870   .debug_str:0000000000000810 .LASF57
GAS LISTING /tmp/cc1E6ibf.s 			page 16


     /tmp/cc1E6ibf.s:2698   .debug_str:0000000000000358 .LASF25
     /tmp/cc1E6ibf.s:2626   .debug_str:0000000000000068 .LASF28
     /tmp/cc1E6ibf.s:2894   .debug_str:00000000000008d8 .LASF30
     /tmp/cc1E6ibf.s:2638   .debug_str:00000000000000a6 .LASF32
     /tmp/cc1E6ibf.s:2712   .debug_str:00000000000003aa .LASF33
     /tmp/cc1E6ibf.s:2720   .debug_str:00000000000003e4 .LASF34
     /tmp/cc1E6ibf.s:2856   .debug_str:0000000000000787 .LASF35
     /tmp/cc1E6ibf.s:2832   .debug_str:00000000000006e1 .LASF37
     /tmp/cc1E6ibf.s:2734   .debug_str:000000000000046a .LASF36
     /tmp/cc1E6ibf.s:2872   .debug_str:000000000000082c .LASF38
     /tmp/cc1E6ibf.s:2684   .debug_str:00000000000002eb .LASF39
     /tmp/cc1E6ibf.s:2826   .debug_str:00000000000006ba .LASF40
     /tmp/cc1E6ibf.s:2804   .debug_str:0000000000000622 .LASF43
     /tmp/cc1E6ibf.s:2714   .debug_str:00000000000003ba .LASF45
     /tmp/cc1E6ibf.s:2766   .debug_str:0000000000000554 .LASF41
     /tmp/cc1E6ibf.s:2728   .debug_str:0000000000000424 .LASF42
     /tmp/cc1E6ibf.s:2758   .debug_str:000000000000050b .LASF44
     /tmp/cc1E6ibf.s:2864   .debug_str:00000000000007e0 .LASF46
     /tmp/cc1E6ibf.s:2690   .debug_str:0000000000000314 .LASF143
     /tmp/cc1E6ibf.s:2744   .debug_str:00000000000004a3 .LASF47
     /tmp/cc1E6ibf.s:2858   .debug_str:0000000000000797 .LASF48
     /tmp/cc1E6ibf.s:2828   .debug_str:00000000000006c6 .LASF144
     /tmp/cc1E6ibf.s:2658   .debug_str:00000000000001e4 .LASF49
     /tmp/cc1E6ibf.s:2622   .debug_str:0000000000000042 .LASF50
     /tmp/cc1E6ibf.s:2820   .debug_str:0000000000000693 .LASF52
     /tmp/cc1E6ibf.s:2830   .debug_str:00000000000006cb .LASF54
     /tmp/cc1E6ibf.s:2840   .debug_str:0000000000000716 .LASF56
     /tmp/cc1E6ibf.s:2772   .debug_str:0000000000000579 .LASF58
     /tmp/cc1E6ibf.s:2680   .debug_str:00000000000002c5 .LASF145
     /tmp/cc1E6ibf.s:2738   .debug_str:000000000000048b .LASF59
     /tmp/cc1E6ibf.s:2790   .debug_str:00000000000005d0 .LASF60
     /tmp/cc1E6ibf.s:2788   .debug_str:00000000000005ca .LASF61
     /tmp/cc1E6ibf.s:2742   .debug_str:000000000000049b .LASF62
     /tmp/cc1E6ibf.s:2792   .debug_str:00000000000005d9 .LASF63
     /tmp/cc1E6ibf.s:2896   .debug_str:00000000000008e5 .LASF64
     /tmp/cc1E6ibf.s:2848   .debug_str:000000000000074e .LASF65
     /tmp/cc1E6ibf.s:2752   .debug_str:00000000000004d4 .LASF66
     /tmp/cc1E6ibf.s:2724   .debug_str:0000000000000406 .LASF68
     /tmp/cc1E6ibf.s:2786   .debug_str:00000000000005c1 .LASF67
     /tmp/cc1E6ibf.s:2696   .debug_str:0000000000000345 .LASF69
     /tmp/cc1E6ibf.s:2892   .debug_str:00000000000008ca .LASF146
     /tmp/cc1E6ibf.s:2730   .debug_str:000000000000043b .LASF147
     /tmp/cc1E6ibf.s:2794   .debug_str:00000000000005e3 .LASF70
     /tmp/cc1E6ibf.s:2672   .debug_str:000000000000025a .LASF148
     /tmp/cc1E6ibf.s:2666   .debug_str:0000000000000224 .LASF71
     /tmp/cc1E6ibf.s:2750   .debug_str:00000000000004c7 .LASF72
     /tmp/cc1E6ibf.s:2644   .debug_str:000000000000017d .LASF73
     /tmp/cc1E6ibf.s:2834   .debug_str:00000000000006ee .LASF74
     /tmp/cc1E6ibf.s:2904   .debug_str:0000000000000912 .LASF75
     /tmp/cc1E6ibf.s:2636   .debug_str:0000000000000098 .LASF76
     /tmp/cc1E6ibf.s:2688   .debug_str:00000000000002f9 .LASF77
     /tmp/cc1E6ibf.s:2702   .debug_str:0000000000000365 .LASF78
     /tmp/cc1E6ibf.s:2616   .debug_str:000000000000000f .LASF79
     /tmp/cc1E6ibf.s:2620   .debug_str:0000000000000039 .LASF80
     /tmp/cc1E6ibf.s:2692   .debug_str:000000000000031c .LASF81
     /tmp/cc1E6ibf.s:2686   .debug_str:00000000000002f0 .LASF82
     /tmp/cc1E6ibf.s:2662   .debug_str:0000000000000201 .LASF83
GAS LISTING /tmp/cc1E6ibf.s 			page 17


     /tmp/cc1E6ibf.s:2770   .debug_str:0000000000000572 .LASF84
     /tmp/cc1E6ibf.s:2824   .debug_str:00000000000006a7 .LASF85
     /tmp/cc1E6ibf.s:2886   .debug_str:00000000000008a4 .LASF86
     /tmp/cc1E6ibf.s:2880   .debug_str:0000000000000875 .LASF87
     /tmp/cc1E6ibf.s:2708   .debug_str:000000000000039a .LASF88
     /tmp/cc1E6ibf.s:2670   .debug_str:0000000000000246 .LASF89
     /tmp/cc1E6ibf.s:2842   .debug_str:000000000000071c .LASF90
     /tmp/cc1E6ibf.s:2852   .debug_str:0000000000000764 .LASF91
     /tmp/cc1E6ibf.s:2810   .debug_str:0000000000000639 .LASF92
     /tmp/cc1E6ibf.s:2648   .debug_str:0000000000000199 .LASF93
     /tmp/cc1E6ibf.s:2910   .debug_str:0000000000000957 .LASF94
     /tmp/cc1E6ibf.s:2694   .debug_str:0000000000000331 .LASF95
     /tmp/cc1E6ibf.s:2784   .debug_str:00000000000005ba .LASF96
     /tmp/cc1E6ibf.s:2900   .debug_str:00000000000008fa .LASF97
     /tmp/cc1E6ibf.s:2632   .debug_str:0000000000000080 .LASF98
     /tmp/cc1E6ibf.s:2706   .debug_str:0000000000000387 .LASF99
     /tmp/cc1E6ibf.s:2774   .debug_str:0000000000000589 .LASF100
     /tmp/cc1E6ibf.s:2868   .debug_str:00000000000007fe .LASF101
     /tmp/cc1E6ibf.s:2630   .debug_str:000000000000007a .LASF102
     /tmp/cc1E6ibf.s:2914   .debug_str:0000000000000964 .LASF103
     /tmp/cc1E6ibf.s:2908   .debug_str:000000000000094c .LASF104
     /tmp/cc1E6ibf.s:2844   .debug_str:0000000000000724 .LASF105
     /tmp/cc1E6ibf.s:2740   .debug_str:0000000000000490 .LASF106
     /tmp/cc1E6ibf.s:2754   .debug_str:00000000000004e2 .LASF107
     /tmp/cc1E6ibf.s:2654   .debug_str:00000000000001ce .LASF108
     /tmp/cc1E6ibf.s:2814   .debug_str:000000000000064d .LASF109
     /tmp/cc1E6ibf.s:2628   .debug_str:0000000000000070 .LASF110
     /tmp/cc1E6ibf.s:2722   .debug_str:00000000000003f0 .LASF111
     /tmp/cc1E6ibf.s:2866   .debug_str:00000000000007f9 .LASF112
     /tmp/cc1E6ibf.s:2756   .debug_str:00000000000004fa .LASF113
     /tmp/cc1E6ibf.s:2718   .debug_str:00000000000003df .LASF114
     /tmp/cc1E6ibf.s:2634   .debug_str:0000000000000087 .LASF115
     /tmp/cc1E6ibf.s:2854   .debug_str:0000000000000778 .LASF116
     /tmp/cc1E6ibf.s:2650   .debug_str:00000000000001ad .LASF117
     /tmp/cc1E6ibf.s:2890   .debug_str:00000000000008b5 .LASF118
     /tmp/cc1E6ibf.s:2674   .debug_str:0000000000000269 .LASF119
     /tmp/cc1E6ibf.s:2652   .debug_str:00000000000001c9 .LASF120
     /tmp/cc1E6ibf.s:27     .text:0000000000000000 .LFB40
     /tmp/cc1E6ibf.s:325    .text:000000000000021c .LFE40
     /tmp/cc1E6ibf.s:2710   .debug_str:00000000000003a2 .LASF121
     /tmp/cc1E6ibf.s:2768   .debug_str:0000000000000560 .LASF122
     /tmp/cc1E6ibf.s:2882   .debug_str:0000000000000888 .LASF123
     /tmp/cc1E6ibf.s:2477   .debug_loc:0000000000000000 .LLST0
     /tmp/cc1E6ibf.s:2493   .debug_loc:000000000000003b .LLST1
     /tmp/cc1E6ibf.s:2500   .debug_loc:000000000000005e .LLST2
     /tmp/cc1E6ibf.s:2776   .debug_str:000000000000058f .LASF124
     /tmp/cc1E6ibf.s:2513   .debug_loc:0000000000000096 .LLST3
     /tmp/cc1E6ibf.s:2800   .debug_str:0000000000000608 .LASF125
     /tmp/cc1E6ibf.s:2532   .debug_loc:00000000000000f2 .LLST4
     /tmp/cc1E6ibf.s:288    .text:00000000000001d8 .LBB27
     /tmp/cc1E6ibf.s:304    .text:00000000000001f4 .LBE27
     /tmp/cc1E6ibf.s:2806   .debug_str:000000000000062d .LASF126
     /tmp/cc1E6ibf.s:2543   .debug_loc:0000000000000128 .LLST10
     /tmp/cc1E6ibf.s:2898   .debug_str:00000000000008ee .LASF127
     /tmp/cc1E6ibf.s:2798   .debug_str:00000000000005fc .LASF149
     /tmp/cc1E6ibf.s:2556   .debug_loc:0000000000000160 .LLST11
     /tmp/cc1E6ibf.s:2748   .debug_str:00000000000004bd .LASF128
GAS LISTING /tmp/cc1E6ibf.s 			page 18


     /tmp/cc1E6ibf.s:297    .text:00000000000001ec .LVL45
     /tmp/cc1E6ibf.s:50     .text:0000000000000024 .LBB15
     /tmp/cc1E6ibf.s:62     .text:0000000000000028 .LBE15
     /tmp/cc1E6ibf.s:175    .text:0000000000000150 .LBB17
     /tmp/cc1E6ibf.s:190    .text:000000000000015c .LBE17
     /tmp/cc1E6ibf.s:2563   .debug_loc:0000000000000183 .LLST5
     /tmp/cc1E6ibf.s:235    .text:00000000000001a8 .LBB19
     /tmp/cc1E6ibf.s:243    .text:00000000000001ac .LBE19
     /tmp/cc1E6ibf.s:2571   .debug_loc:00000000000001a7 .LLST6
     /tmp/cc1E6ibf.s:249    .text:00000000000001b4 .LBB21
     /tmp/cc1E6ibf.s:256    .text:00000000000001b8 .LBE21
     /tmp/cc1E6ibf.s:2578   .debug_loc:00000000000001ca .LLST7
     /tmp/cc1E6ibf.s:262    .text:00000000000001c0 .LBB23
     /tmp/cc1E6ibf.s:269    .text:00000000000001c4 .LBE23
     /tmp/cc1E6ibf.s:2585   .debug_loc:00000000000001ed .LLST8
     /tmp/cc1E6ibf.s:275    .text:00000000000001cc .LBB25
     /tmp/cc1E6ibf.s:282    .text:00000000000001d0 .LBE25
     /tmp/cc1E6ibf.s:2592   .debug_loc:0000000000000210 .LLST9
     /tmp/cc1E6ibf.s:44     .text:000000000000001c .LVL0
     /tmp/cc1E6ibf.s:79     .text:0000000000000054 .LVL5
     /tmp/cc1E6ibf.s:91     .text:0000000000000068 .LVL8
     /tmp/cc1E6ibf.s:100    .text:0000000000000078 .LVL10
     /tmp/cc1E6ibf.s:109    .text:0000000000000088 .LVL12
     /tmp/cc1E6ibf.s:120    .text:00000000000000a0 .LVL14
     /tmp/cc1E6ibf.s:132    .text:00000000000000c8 .LVL15
     /tmp/cc1E6ibf.s:137    .text:00000000000000d8 .LVL16
     /tmp/cc1E6ibf.s:144    .text:00000000000000f0 .LVL17
     /tmp/cc1E6ibf.s:149    .text:0000000000000100 .LVL18
     /tmp/cc1E6ibf.s:156    .text:0000000000000118 .LVL19
     /tmp/cc1E6ibf.s:161    .text:0000000000000128 .LVL20
     /tmp/cc1E6ibf.s:168    .text:0000000000000140 .LVL21
     /tmp/cc1E6ibf.s:173    .text:0000000000000150 .LVL22
     /tmp/cc1E6ibf.s:195    .text:0000000000000168 .LVL24
     /tmp/cc1E6ibf.s:204    .text:0000000000000178 .LVL27
     /tmp/cc1E6ibf.s:213    .text:0000000000000188 .LVL30
     /tmp/cc1E6ibf.s:222    .text:0000000000000198 .LVL33
     /tmp/cc1E6ibf.s:228    .text:00000000000001a4 .LVL34
     /tmp/cc1E6ibf.s:309    .text:0000000000000204 .LVL48
     /tmp/cc1E6ibf.s:2726   .debug_str:000000000000041f .LASF129
     /tmp/cc1E6ibf.s:2902   .debug_str:000000000000090d .LASF150
     /tmp/cc1E6ibf.s:2912   .debug_str:000000000000095f .LASF130
     /tmp/cc1E6ibf.s:2778   .debug_str:0000000000000594 .LASF131
     /tmp/cc1E6ibf.s:2664   .debug_str:0000000000000216 .LASF132
     /tmp/cc1E6ibf.s:2816   .debug_str:0000000000000663 .LASF133
     /tmp/cc1E6ibf.s:2682   .debug_str:00000000000002dd .LASF134
     /tmp/cc1E6ibf.s:2676   .debug_str:000000000000028b .LASF135
     /tmp/cc1E6ibf.s:2624   .debug_str:000000000000005c .LASF136
     /tmp/cc1E6ibf.s:2836   .debug_str:00000000000006f9 .LASF137
     /tmp/cc1E6ibf.s:2704   .debug_str:0000000000000372 .LASF138
     /tmp/cc1E6ibf.s:2660   .debug_str:00000000000001f1 .LASF139
     /tmp/cc1E6ibf.s:73     .text:0000000000000048 .LVL3
     /tmp/cc1E6ibf.s:77     .text:000000000000004c .LVL4
     /tmp/cc1E6ibf.s:81     .text:0000000000000058 .LVL6
     /tmp/cc1E6ibf.s:286    .text:00000000000001d8 .LVL43
     /tmp/cc1E6ibf.s:86     .text:000000000000005c .LVL7
     /tmp/cc1E6ibf.s:187    .text:000000000000015c .LVL23
     /tmp/cc1E6ibf.s:197    .text:000000000000016c .LVL25
GAS LISTING /tmp/cc1E6ibf.s 			page 19


     /tmp/cc1E6ibf.s:94     .text:000000000000006c .LVL9
     /tmp/cc1E6ibf.s:112    .text:000000000000008c .LVL13
     /tmp/cc1E6ibf.s:202    .text:0000000000000170 .LVL26
     /tmp/cc1E6ibf.s:215    .text:000000000000018c .LVL31
     /tmp/cc1E6ibf.s:220    .text:0000000000000190 .LVL32
     /tmp/cc1E6ibf.s:103    .text:000000000000007c .LVL11
     /tmp/cc1E6ibf.s:206    .text:000000000000017c .LVL28
     /tmp/cc1E6ibf.s:211    .text:0000000000000180 .LVL29
     /tmp/cc1E6ibf.s:292    .text:00000000000001e0 .LVL44
     /tmp/cc1E6ibf.s:300    .text:00000000000001f0 .LVL46
     /tmp/cc1E6ibf.s:302    .text:00000000000001f4 .LVL47
     /tmp/cc1E6ibf.s:320    .text:0000000000000214 .LVL49
     /tmp/cc1E6ibf.s:234    .text:00000000000001a8 .LVL35
     /tmp/cc1E6ibf.s:241    .text:00000000000001ac .LVL36
     /tmp/cc1E6ibf.s:248    .text:00000000000001b4 .LVL37
     /tmp/cc1E6ibf.s:254    .text:00000000000001b8 .LVL38
     /tmp/cc1E6ibf.s:261    .text:00000000000001c0 .LVL39
     /tmp/cc1E6ibf.s:267    .text:00000000000001c4 .LVL40
     /tmp/cc1E6ibf.s:274    .text:00000000000001cc .LVL41
     /tmp/cc1E6ibf.s:280    .text:00000000000001d0 .LVL42
     /tmp/cc1E6ibf.s:334    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator4initEv
_ZN5Riscv14supervisorTrapEv
HEAP_END_ADDR
HEAP_START_ADDR
_Z9mem_allocm
_ZN15MemoryAllocator8mem_freeEPKv
_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
_Z11workerBodyAPv
_Z11printStringPKc
_Z11workerBodyBPv
_Z11workerBodyCPv
_Z11workerBodyDPv
__putc
_Z15thread_dispatchv
_ZN3TCB12deleteThreadEPS_
